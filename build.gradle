buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// apply plugin: 'eclipse'

version = mod_version
group = 'mrthomas20121.rechiseled_compat'
archivesBaseName = 'Rechiseled_Compat'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    runs {

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // to support mixins
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the mod id for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', "${mod_id}",
                    '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run')

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            jvmArgs "-Dmixin.env.disableRefMap=true"

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Core lib
    implementation fg.deobf("curse.maven:supermartijn642s-core-lib-454372:${supermartijn_core_version}")

    // Config lib
    implementation fg.deobf("curse.maven:supermartijn642s-config-lib-438332:${supermartijn_config_version}")

    // rechiseled
    implementation fg.deobf("curse.maven:rechiseled-558998:${rechiseled_version}")

    // Just Enough Items
    implementation fg.deobf("curse.maven:jei-238222:${jei_version}")

    implementation fg.deobf("curse.maven:autoregLib_version-250363:${autoregLib_version}")
    implementation fg.deobf("curse.maven:quark-243121:${quark_version}")
}

repositories {
    maven { // JEI
        name 'Prog Maven'
        url 'https://dvs1.progwml6.com/files/maven'
    }
	maven {
		name 'Industrial Foregoing'
        url 'https://cdn.hrzn.studio/maven/'
    }
    maven {
        name 'crafttweaker and jei'
        url 'https://maven.blamejared.com'
    }
    maven {
        url "https://cfa2.cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Rechiseled Compat",
            "Specification-Vendor": "Mrthomas20121",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" : "rechiseled_compat",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}